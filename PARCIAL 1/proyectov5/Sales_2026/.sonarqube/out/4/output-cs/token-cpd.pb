Д
CD:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\Utils.cs
	namespace		 	
BLL		
 
{

 
public 

class 
Utils 
{ 
public 
bool 
EnviarCorreo  
(  !
string! '
email( -
,- .
string/ 5
asunto6 <
,< =
string> D
mensajeE L
)L M
{ 	
var 
fromAddress 
= 
new !
MailAddress" -
(- .
$str. B
,B C
$strD Q
)Q R
;R S
var 
	toAddress 
= 
new 
MailAddress  +
(+ ,
email, 1
,1 2
$str3 <
)< =
;= >
const 
string 
fromPassword %
=& '
$str( =
;= >
try 
{ 
var 
smtp 
= 
new 

SmtpClient )
{ 
Host 
= 
$str +
,+ ,
Port 
= 
$num 
, 
	EnableSsl 
= 
true  $
,$ %
DeliveryMethod "
=# $
SmtpDeliveryMethod% 7
.7 8
Network8 ?
,? @!
UseDefaultCredentials )
=* +
false, 1
,1 2
Credentials 
=  !
new" %
NetworkCredential& 7
(7 8
fromAddress8 C
.C D
AddressD K
,K L
fromPasswordM Y
)Y Z
} 
; 
using 
( 
var 
mailMessage &
=' (
new) ,
MailMessage- 8
(8 9
fromAddress9 D
,D E
	toAddressF O
)O P
{   
Subject!! 
=!! 
asunto!! $
,!!$ %
Body"" 
="" 
mensaje"" "
}## 
)## 
{$$ 
smtp%% 
.%% 
Send%% 
(%% 
mailMessage%% )
)%%) *
;%%* +
}&& 
return(( 
true(( 
;(( 
})) 
catch** 
(** 
	Exception** 
ex** 
)**  
{++ 
Console,, 
.,, 
	WriteLine,, !
(,,! "
$",," $
$str,,$ ?
{,,? @
ex,,@ B
.,,B C
Message,,C J
},,J K
",,K L
),,L M
;,,M N
return-- 
false-- 
;-- 
}.. 
}// 	
}11 
}22 ·
KD:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\RegistroLogic.cs
	namespace		 	
BLL		
 
{

 
public 

class 
RegistroLogic 
{ 
public 
string $
GenerateVerificationCode .
(. /
int/ 2
length3 9
=: ;
$num< =
)= >
{ 	
const 
string 
chars 
=  
$str! -
;- .
var 
random 
= 
new 
Random #
(# $
)$ %
;% &
return 
new 
string 
( 

Enumerable (
.( )
Repeat) /
(/ 0
chars0 5
,5 6
length7 =
)= >
. 
Select 
( 
s 
=> 
s 
[ 
random %
.% &
Next& *
(* +
s+ ,
., -
Length- 3
)3 4
]4 5
)5 6
.6 7
ToArray7 >
(> ?
)? @
)@ A
;A B
} 	
public 
bool $
EnviarCodigoVerificacion ,
(, -
string- 3
email4 9
,9 :
string; A
codigoB H
)H I
{ 	
try 
{ 
var 
fromAddress 
=  !
new" %
MailAddress& 1
(1 2
$str2 F
,F G
$strH U
)U V
;V W
var 
	toAddress 
= 
new  #
MailAddress$ /
(/ 0
email0 5
,5 6
$str7 @
)@ A
;A B
const 
string 
fromPassword )
=* +
$str, A
;A B
const 
string 
subject $
=% &
$str' ?
;? @
string 
body 
= 
$"  
$str  >
{> ?
codigo? E
}E F
"F G
;G H
var!! 
smtp!! 
=!! 
new!! 

SmtpClient!! )
{"" 
Host## 
=## 
$str## +
,##+ ,
Port$$ 
=$$ 
$num$$ 
,$$ 
	EnableSsl%% 
=%% 
true%%  $
,%%$ %
DeliveryMethod&& "
=&&# $
SmtpDeliveryMethod&&% 7
.&&7 8
Network&&8 ?
,&&? @!
UseDefaultCredentials'' )
=''* +
false'', 1
,''1 2
Credentials(( 
=((  !
new((" %
NetworkCredential((& 7
(((7 8
fromAddress((8 C
.((C D
Address((D K
,((K L
fromPassword((M Y
)((Y Z
})) 
;)) 
using++ 
(++ 
var++ 
message++ "
=++# $
new++% (
MailMessage++) 4
(++4 5
fromAddress++5 @
,++@ A
	toAddress++B K
)++K L
{,, 
Subject-- 
=-- 
subject-- %
,--% &
Body.. 
=.. 
body.. 
}// 
)// 
{00 
smtp11 
.11 
Send11 
(11 
message11 %
)11% &
;11& '
}22 
return44 
true44 
;44 
}55 
catch66 
(66 
	Exception66 
ex66 
)66  
{77 
Console88 
.88 
	WriteLine88 !
(88! "
$"88" $
$str88$ ?
{88? @
ex88@ B
.88B C
Message88C J
}88J K
"88K L
)88L M
;88M N
return99 
false99 
;99 
}:: 
};; 	
}== 
}>> ск
GD:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\UserLogic.cs
	namespace 	
BLL
 
{ 
public		 

class		 
	UserLogic		 
{

 
public 
Users 
Create 
( 
Users !
user" &
)& '
{ 	
Users 
res 
= 
null 
; 
using 
( 
var 
r 
= 
RepositoryFactory ,
., -
CreateRepository- =
(= >
)> ?
)? @
{ 
Users 
existingUser "
=# $
r% &
.& '
Retrieve' /
</ 0
Users0 5
>5 6
(6 7
u7 8
=>9 ;
u< =
.= >
Username> F
==G I
userJ N
.N O
UsernameO W
||X Z
u[ \
.\ ]
EmailAddress] i
==j l
userm q
.q r
EmailAddressr ~
)~ 
;	 А
if 
( 
existingUser  
==! #
null$ (
)( )
{ 
res 
= 
r 
. 
Create "
(" #
user# '
)' (
;( )
} 
else 
{ 
throw 
new 
	Exception '
(' (
$str( s
)s t
;t u
} 
} 
return 
res 
; 
} 	
public   
UserDTO   
	CreateDTO    
(    !
UserDTO  ! (
userDTO  ) 0
)  0 1
{!! 	
UserDTO"" 
res"" 
="" 
null"" 
;"" 
using## 
(## 
var## 
r## 
=## 
RepositoryFactory## ,
.##, -
CreateRepository##- =
(##= >
)##> ?
)##? @
{$$ 
var&& 

userEntity&& 
=&&  
new&&! $
Users&&% *
{'' 
Username(( 
=(( 
userDTO(( &
.((& '
Username((' /
,((/ 0
EmailAddress))  
=))! "
userDTO))# *
.))* +
EmailAddress))+ 7
,))7 8
	FirstName** 
=** 
userDTO**  '
.**' (
	FirstName**( 1
,**1 2
LastName++ 
=++ 
userDTO++ &
.++& '
LastName++' /
,++/ 0
Rol,, 
=,, 
userDTO,, !
.,,! "
Rol,," %
}-- 
;-- 
Users00 
existingUser00 "
=00# $
r00% &
.00& '
Retrieve00' /
<00/ 0
Users000 5
>005 6
(006 7
u007 8
=>009 ;
u00< =
.00= >
Username00> F
==00G I

userEntity00J T
.00T U
Username00U ]
||00^ `
u00a b
.00b c
EmailAddress00c o
==00p r

userEntity00s }
.00} ~
EmailAddress	00~ К
)
00К Л
;
00Л М
if11 
(11 
existingUser11  
==11! #
null11$ (
)11( )
{22 
Users33 
createdUser33 %
=33& '
r33( )
.33) *
Create33* 0
(330 1

userEntity331 ;
)33; <
;33< =
res66 
=66 
new66 
UserDTO66 %
{77 
UserId88 
=88  
createdUser88! ,
.88, -
UserId88- 3
,883 4
Username99  
=99! "
createdUser99# .
.99. /
Username99/ 7
,997 8
EmailAddress:: $
=::% &
createdUser::' 2
.::2 3
EmailAddress::3 ?
,::? @
	FirstName;; !
=;;" #
createdUser;;$ /
.;;/ 0
	FirstName;;0 9
,;;9 :
LastName<<  
=<<! "
createdUser<<# .
.<<. /
LastName<</ 7
,<<7 8
Rol== 
=== 
createdUser== )
.==) *
Rol==* -
}>> 
;>> 
}?? 
else@@ 
{AA 
throwBB 
newBB 
	ExceptionBB '
(BB' (
$strBB( s
)BBs t
;BBt u
}CC 
}DD 
returnEE 
resEE 
;EE 
}FF 	
publicII 
UsersII 
RetrieveByIdII !
(II! "
intII" %
idII& (
)II( )
{JJ 	
UsersKK 
resKK 
=KK 
nullKK 
;KK 
usingLL 
(LL 
varLL 
rLL 
=LL 
RepositoryFactoryLL ,
.LL, -
CreateRepositoryLL- =
(LL= >
)LL> ?
)LL? @
{MM 
resNN 
=NN 
rNN 
.NN 
RetrieveNN  
<NN  !
UsersNN! &
>NN& '
(NN' (
uNN( )
=>NN* ,
uNN- .
.NN. /
UserIdNN/ 5
==NN6 8
idNN9 ;
)NN; <
;NN< =
}OO 
returnPP 
resPP 
;PP 
}QQ 	
publicTT 
UserDTOTT 
GetUserByIdTT "
(TT" #
intTT# &
idTT' )
)TT) *
{UU 	
UserDTOVV 
resVV 
=VV 
nullVV 
;VV 
usingWW 
(WW 
varWW 
rWW 
=WW 
RepositoryFactoryWW ,
.WW, -
CreateRepositoryWW- =
(WW= >
)WW> ?
)WW? @
{XX 
varYY 
userYY 
=YY 
rYY 
.YY 
RetrieveYY %
<YY% &
UsersYY& +
>YY+ ,
(YY, -
uYY- .
=>YY/ 1
uYY2 3
.YY3 4
UserIdYY4 :
==YY; =
idYY> @
)YY@ A
;YYA B
ifZZ 
(ZZ 
userZZ 
!=ZZ 
nullZZ  
)ZZ  !
{[[ 
res\\ 
=\\ 
new\\ 
UserDTO\\ %
{]] 
UserId^^ 
=^^  
user^^! %
.^^% &
UserId^^& ,
,^^, -
Username__  
=__! "
user__# '
.__' (
Username__( 0
,__0 1
EmailAddress`` $
=``% &
user``' +
.``+ ,
EmailAddress``, 8
,``8 9
	FirstNameaa !
=aa" #
useraa$ (
.aa( )
	FirstNameaa) 2
,aa2 3
LastNamebb  
=bb! "
userbb# '
.bb' (
LastNamebb( 0
,bb0 1
Rolcc 
=cc 
usercc "
.cc" #
Rolcc# &
}dd 
;dd 
}ee 
}ff 
returngg 
resgg 
;gg 
}hh 	
publickk 
boolkk 
Updatekk 
(kk 
Userskk  
userToUpdatekk! -
)kk- .
{ll 	
boolmm 
resmm 
=mm 
falsemm 
;mm 
usingnn 
(nn 
varnn 
rnn 
=nn 
RepositoryFactorynn ,
.nn, -
CreateRepositorynn- =
(nn= >
)nn> ?
)nn? @
{oo 
Userspp 
existingUserpp "
=pp# $
rpp% &
.pp& '
Retrievepp' /
<pp/ 0
Userspp0 5
>pp5 6
(pp6 7
upp7 8
=>pp9 ;
upp< =
.pp= >
Usernamepp> F
==ppG I
userToUpdateppJ V
.ppV W
UsernameppW _
&&pp` b
uppc d
.ppd e
UserIdppe k
!=ppl n
userToUpdateppo {
.pp{ |
UserId	pp| В
)
ppВ Г
;
ppГ Д
ifqq 
(qq 
existingUserqq  
==qq! #
nullqq$ (
)qq( )
{rr 
resss 
=ss 
rss 
.ss 
Updatess "
(ss" #
userToUpdatess# /
)ss/ 0
;ss0 1
}tt 
elseuu 
{vv 
throwww 
newww 
	Exceptionww '
(ww' (
$strww( `
)ww` a
;wwa b
}xx 
}yy 
returnzz 
reszz 
;zz 
}{{ 	
public~~ 
bool~~ 
	UpdateDTO~~ 
(~~ 
UserDTO~~ %
userDTO~~& -
)~~- .
{ 	
bool
АА 
res
АА 
=
АА 
false
АА 
;
АА 
using
ББ 
(
ББ 
var
ББ 
r
ББ 
=
ББ 
RepositoryFactory
ББ ,
.
ББ, -
CreateRepository
ББ- =
(
ББ= >
)
ББ> ?
)
ББ? @
{
ВВ 
var
ГГ 

userEntity
ГГ 
=
ГГ  
new
ГГ! $
Users
ГГ% *
{
ДД 
UserId
ЕЕ 
=
ЕЕ 
userDTO
ЕЕ $
.
ЕЕ$ %
UserId
ЕЕ% +
,
ЕЕ+ ,
Username
ЖЖ 
=
ЖЖ 
userDTO
ЖЖ &
.
ЖЖ& '
Username
ЖЖ' /
,
ЖЖ/ 0
EmailAddress
ЗЗ  
=
ЗЗ! "
userDTO
ЗЗ# *
.
ЗЗ* +
EmailAddress
ЗЗ+ 7
,
ЗЗ7 8
	FirstName
ИИ 
=
ИИ 
userDTO
ИИ  '
.
ИИ' (
	FirstName
ИИ( 1
,
ИИ1 2
LastName
ЙЙ 
=
ЙЙ 
userDTO
ЙЙ &
.
ЙЙ& '
LastName
ЙЙ' /
,
ЙЙ/ 0
Rol
КК 
=
КК 
userDTO
КК !
.
КК! "
Rol
КК" %
}
ЛЛ 
;
ЛЛ 
Users
НН 
existingUser
НН "
=
НН# $
r
НН% &
.
НН& '
Retrieve
НН' /
<
НН/ 0
Users
НН0 5
>
НН5 6
(
НН6 7
u
НН7 8
=>
НН9 ;
u
НН< =
.
НН= >
Username
НН> F
==
ННG I

userEntity
ННJ T
.
ННT U
Username
ННU ]
&&
НН^ `
u
ННa b
.
ННb c
UserId
ННc i
!=
ННj l

userEntity
ННm w
.
ННw x
UserId
ННx ~
)
НН~ 
;НН А
if
ОО 
(
ОО 
existingUser
ОО  
==
ОО! #
null
ОО$ (
)
ОО( )
{
ПП 
res
РР 
=
РР 
r
РР 
.
РР 
Update
РР "
(
РР" #

userEntity
РР# -
)
РР- .
;
РР. /
}
СС 
else
ТТ 
{
УУ 
throw
ФФ 
new
ФФ 
	Exception
ФФ '
(
ФФ' (
$str
ФФ( `
)
ФФ` a
;
ФФa b
}
ХХ 
}
ЦЦ 
return
ЧЧ 
res
ЧЧ 
;
ЧЧ 
}
ШШ 	
public
ЫЫ 
bool
ЫЫ 
Delete
ЫЫ 
(
ЫЫ 
int
ЫЫ 
id
ЫЫ !
)
ЫЫ! "
{
ЬЬ 	
bool
ЭЭ 
res
ЭЭ 
=
ЭЭ 
false
ЭЭ 
;
ЭЭ 
var
ЮЮ 
user
ЮЮ 
=
ЮЮ 
RetrieveById
ЮЮ #
(
ЮЮ# $
id
ЮЮ$ &
)
ЮЮ& '
;
ЮЮ' (
if
ЯЯ 
(
ЯЯ 
user
ЯЯ 
!=
ЯЯ 
null
ЯЯ 
)
ЯЯ 
{
аа 
using
бб 
(
бб 
var
бб 
r
бб 
=
бб 
RepositoryFactory
бб 0
.
бб0 1
CreateRepository
бб1 A
(
ббA B
)
ббB C
)
ббC D
{
вв 
res
гг 
=
гг 
r
гг 
.
гг 
Delete
гг "
(
гг" #
user
гг# '
)
гг' (
;
гг( )
}
дд 
}
ее 
else
жж 
{
зз 
throw
ии 
new
ии 
	Exception
ии #
(
ии# $
$str
ии$ ;
)
ии; <
;
ии< =
}
йй 
return
кк 
res
кк 
;
кк 
}
лл 	
public
оо 
List
оо 
<
оо 
Users
оо 
>
оо 
Filter
оо !
(
оо! "
string
оо" (
username
оо) 1
)
оо1 2
{
пп 	
List
░░ 
<
░░ 
Users
░░ 
>
░░ 
res
░░ 
=
░░ 
null
░░ "
;
░░" #
using
▒▒ 
(
▒▒ 
var
▒▒ 
r
▒▒ 
=
▒▒ 
RepositoryFactory
▒▒ ,
.
▒▒, -
CreateRepository
▒▒- =
(
▒▒= >
)
▒▒> ?
)
▒▒? @
{
▓▓ 
res
││ 
=
││ 
r
││ 
.
││ 
Filter
││ 
<
││ 
Users
││ $
>
││$ %
(
││% &
u
││& '
=>
││( *
u
││+ ,
.
││, -
Username
││- 5
.
││5 6
Contains
││6 >
(
││> ?
username
││? G
)
││G H
)
││H I
;
││I J
}
┤┤ 
return
╡╡ 
res
╡╡ 
;
╡╡ 
}
╢╢ 	
public
╣╣ 
List
╣╣ 
<
╣╣ 
UserDTO
╣╣ 
>
╣╣ 
FilterUsersDTO
╣╣ +
(
╣╣+ ,
string
╣╣, 2
username
╣╣3 ;
)
╣╣; <
{
║║ 	
List
╗╗ 
<
╗╗ 
UserDTO
╗╗ 
>
╗╗ 
res
╗╗ 
=
╗╗ 
null
╗╗  $
;
╗╗$ %
using
╝╝ 
(
╝╝ 
var
╝╝ 
r
╝╝ 
=
╝╝ 
RepositoryFactory
╝╝ ,
.
╝╝, -
CreateRepository
╝╝- =
(
╝╝= >
)
╝╝> ?
)
╝╝? @
{
╜╜ 
var
╛╛ 
users
╛╛ 
=
╛╛ 
r
╛╛ 
.
╛╛ 
Filter
╛╛ $
<
╛╛$ %
Users
╛╛% *
>
╛╛* +
(
╛╛+ ,
u
╛╛, -
=>
╛╛. 0
u
╛╛1 2
.
╛╛2 3
Username
╛╛3 ;
.
╛╛; <
Contains
╛╛< D
(
╛╛D E
username
╛╛E M
)
╛╛M N
)
╛╛N O
;
╛╛O P
res
┐┐ 
=
┐┐ 
users
┐┐ 
.
┐┐ 
Select
┐┐ "
(
┐┐" #
u
┐┐# $
=>
┐┐% '
new
┐┐( +
UserDTO
┐┐, 3
{
└└ 
UserId
┴┴ 
=
┴┴ 
u
┴┴ 
.
┴┴ 
UserId
┴┴ %
,
┴┴% &
Username
┬┬ 
=
┬┬ 
u
┬┬  
.
┬┬  !
Username
┬┬! )
,
┬┬) *
EmailAddress
├├  
=
├├! "
u
├├# $
.
├├$ %
EmailAddress
├├% 1
,
├├1 2
	FirstName
── 
=
── 
u
──  !
.
──! "
	FirstName
──" +
,
──+ ,
LastName
┼┼ 
=
┼┼ 
u
┼┼  
.
┼┼  !
LastName
┼┼! )
,
┼┼) *
Rol
╞╞ 
=
╞╞ 
u
╞╞ 
.
╞╞ 
Rol
╞╞ 
}
╟╟ 
)
╟╟ 
.
╟╟ 
ToList
╟╟ 
(
╟╟ 
)
╟╟ 
;
╟╟ 
}
╚╚ 
return
╔╔ 
res
╔╔ 
;
╔╔ 
}
╩╩ 	
public
══ 
bool
══ 
UsernameExists
══ "
(
══" #
string
══# )
username
══* 2
)
══2 3
{
╬╬ 	
bool
╧╧ 
exists
╧╧ 
=
╧╧ 
false
╧╧ 
;
╧╧  
using
╨╨ 
(
╨╨ 
var
╨╨ 
r
╨╨ 
=
╨╨ 
RepositoryFactory
╨╨ ,
.
╨╨, -
CreateRepository
╨╨- =
(
╨╨= >
)
╨╨> ?
)
╨╨? @
{
╤╤ 
exists
╙╙ 
=
╙╙ 
r
╙╙ 
.
╙╙ 
Retrieve
╙╙ #
<
╙╙# $
Users
╙╙$ )
>
╙╙) *
(
╙╙* +
u
╙╙+ ,
=>
╙╙- /
u
╙╙0 1
.
╙╙1 2
Username
╙╙2 :
==
╙╙; =
username
╙╙> F
)
╙╙F G
!=
╙╙H J
null
╙╙K O
;
╙╙O P
}
╘╘ 
return
╒╒ 
exists
╒╒ 
;
╒╒ 
}
╓╓ 	
public
╫╫ 
bool
╫╫ #
UsernameOrEmailExists
╫╫ )
(
╫╫) *
string
╫╫* 0
username
╫╫1 9
,
╫╫9 :
string
╫╫; A
email
╫╫B G
)
╫╫G H
{
╪╪ 	
bool
┘┘ 
exists
┘┘ 
=
┘┘ 
false
┘┘ 
;
┘┘  
using
┌┌ 
(
┌┌ 
var
┌┌ 
r
┌┌ 
=
┌┌ 
RepositoryFactory
┌┌ ,
.
┌┌, -
CreateRepository
┌┌- =
(
┌┌= >
)
┌┌> ?
)
┌┌? @
{
██ 
exists
▌▌ 
=
▌▌ 
r
▌▌ 
.
▌▌ 
Retrieve
▌▌ #
<
▌▌# $
Users
▌▌$ )
>
▌▌) *
(
▌▌* +
u
▌▌+ ,
=>
▌▌- /
u
▌▌0 1
.
▌▌1 2
Username
▌▌2 :
==
▌▌; =
username
▌▌> F
||
▌▌G I
u
▌▌J K
.
▌▌K L
EmailAddress
▌▌L X
==
▌▌Y [
email
▌▌\ a
)
▌▌a b
!=
▌▌c e
null
▌▌f j
;
▌▌j k
}
▐▐ 
return
▀▀ 
exists
▀▀ 
;
▀▀ 
}
рр 	
public
фф 
UserDTO
фф 
Authenticate
фф #
(
фф# $
string
фф$ *
username
фф+ 3
,
фф3 4
string
фф5 ;
password
фф< D
)
ффD E
{
хх 	
UserDTO
цц 
res
цц 
=
цц 
null
цц 
;
цц 
using
шш 
(
шш 
var
шш 
r
шш 
=
шш 
RepositoryFactory
шш ,
.
шш, -
CreateRepository
шш- =
(
шш= >
)
шш> ?
)
шш? @
{
щщ 
Users
ыы 
user
ыы 
=
ыы 
r
ыы 
.
ыы 
Retrieve
ыы '
<
ыы' (
Users
ыы( -
>
ыы- .
(
ыы. /
u
ыы/ 0
=>
ыы1 3
u
ыы4 5
.
ыы5 6
Username
ыы6 >
==
ыы? A
username
ыыB J
.
ыыJ K
ToLower
ыыK R
(
ыыR S
)
ыыS T
||
ыыU W
u
ыыX Y
.
ыыY Z
EmailAddress
ыыZ f
==
ыыg i
username
ыыj r
.
ыыr s
ToLower
ыыs z
(
ыыz {
)
ыы{ |
)
ыы| }
;
ыы} ~
if
ээ 
(
ээ 
user
ээ 
!=
ээ 
null
ээ  
)
ээ  !
{
юю 
if
ЁЁ 
(
ЁЁ 
BCrypt
ЁЁ 
.
ЁЁ 
Net
ЁЁ "
.
ЁЁ" #
BCrypt
ЁЁ# )
.
ЁЁ) *
Verify
ЁЁ* 0
(
ЁЁ0 1
password
ЁЁ1 9
,
ЁЁ9 :
user
ЁЁ; ?
.
ЁЁ? @
Password
ЁЁ@ H
)
ЁЁH I
)
ЁЁI J
{
ёё 
res
єє 
=
єє 
new
єє !
UserDTO
єє" )
{
ЇЇ 
UserId
її "
=
її# $
user
її% )
.
її) *
UserId
її* 0
,
її0 1
Username
ЎЎ $
=
ЎЎ% &
user
ЎЎ' +
.
ЎЎ+ ,
Username
ЎЎ, 4
,
ЎЎ4 5
EmailAddress
ўў (
=
ўў) *
user
ўў+ /
.
ўў/ 0
EmailAddress
ўў0 <
,
ўў< =
	FirstName
°° %
=
°°& '
user
°°( ,
.
°°, -
	FirstName
°°- 6
,
°°6 7
LastName
∙∙ $
=
∙∙% &
user
∙∙' +
.
∙∙+ ,
LastName
∙∙, 4
,
∙∙4 5
Rol
·· 
=
··  !
user
··" &
.
··& '
Rol
··' *
}
√√ 
;
√√ 
}
№№ 
else
¤¤ 
{
■■ 
return
   
null
   #
;
  # $
}
АА 
}
ББ 
}
ВВ 
return
ДД 
res
ДД 
;
ДД 
}
ЕЕ 	
public
ЗЗ 
string
ЗЗ 
GetEmail
ЗЗ 
(
ЗЗ 
string
ЗЗ %
username
ЗЗ& .
)
ЗЗ. /
{
ИИ 	
string
ЙЙ 
email
ЙЙ 
=
ЙЙ 
null
ЙЙ 
;
ЙЙ  
using
ЛЛ 
(
ЛЛ 
var
ЛЛ 
r
ЛЛ 
=
ЛЛ 
RepositoryFactory
ЛЛ ,
.
ЛЛ, -
CreateRepository
ЛЛ- =
(
ЛЛ= >
)
ЛЛ> ?
)
ЛЛ? @
{
ММ 
Users
ОО 
user
ОО 
=
ОО 
r
ОО 
.
ОО 
Retrieve
ОО '
<
ОО' (
Users
ОО( -
>
ОО- .
(
ОО. /
u
ОО/ 0
=>
ОО1 3
u
ОО4 5
.
ОО5 6
Username
ОО6 >
==
ОО? A
username
ООB J
.
ООJ K
ToLower
ООK R
(
ООR S
)
ООS T
)
ООT U
;
ООU V
if
СС 
(
СС 
user
СС 
!=
СС 
null
СС  
)
СС  !
{
ТТ 
email
УУ 
=
УУ 
user
УУ  
.
УУ  !
EmailAddress
УУ! -
;
УУ- .
}
ФФ 
}
ХХ 
return
ЧЧ 
email
ЧЧ 
;
ЧЧ 
}
ШШ 	
}
ЪЪ 
}ЫЫ Д	
ED:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\UserDTO.cs
	namespace 	
BLL
 
{ 
public

 

class

 
UserDTO

 
{ 
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Rol 
{ 
get 
;  
set! $
;$ %
}& '
} 
} А
UD:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 
) 
]  
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str  
)  !
]! "
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *└Е
JD:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\ProductLogic.cs
	namespace		 	
BLL		
 
{

 
public 

class 
ProductLogic 
{ 
public 
Products 
Create 
( 
Products '
products( 0
)0 1
{ 	
Products 
res 
= 
null 
;  
using 
( 
var 
r 
= 
RepositoryFactory +
.+ ,
CreateRepository, <
(< =
)= >
)> ?
{ 
Products 
result 
=  !
r" #
.# $
Retrieve$ ,
<, -
Products- 5
>5 6
(6 7
p7 8
=>8 :
p: ;
.; <
ProductName< G
==G I
productsI Q
.Q R
ProductNameR ]
)] ^
;^ _
if 
( 
result 
== 
null !
)! "
{ 
res 
= 
r 
. 
Create "
(" #
products# +
)+ ,
;, -
} 
else 
{ 
} 
return 
res 
; 
} 
}   	
public!! 

ProductDTO!! 
	CreateDTO!! #
(!!# $

ProductDTO!!$ .

productDTO!!/ 9
)!!9 :
{"" 	

ProductDTO## 
res## 
=## 
null## !
;##! "
using$$ 
($$ 
var$$ 
r$$ 
=$$ 
RepositoryFactory$$ ,
.$$, -
CreateRepository$$- =
($$= >
)$$> ?
)$$? @
{%% 
var'' 
productEntity'' !
=''" #
new''$ '
Products''( 0
{(( 
ProductName)) 
=))  !

productDTO))" ,
.)), -
ProductName))- 8
,))8 9
	UnitPrice** 
=** 

productDTO**  *
.*** +
	UnitPrice**+ 4
,**4 5
UnitsInStock++  
=++! "

productDTO++# -
.++- .
UnitsInStock++. :
,++: ;

CategoryID,, 
=,,  

productDTO,,! +
.,,+ ,

CategoryID,,, 6
}-- 
;-- 
Products00 
existingProduct00 (
=00) *
r00+ ,
.00, -
Retrieve00- 5
<005 6
Products006 >
>00> ?
(00? @
p00@ A
=>00B D
p00E F
.00F G
ProductName00G R
==00S U
productEntity00V c
.00c d
ProductName00d o
)00o p
;00p q
if22 
(22 
existingProduct22 #
==22$ &
null22' +
)22+ ,
{33 
Products55 
createdProduct55 +
=55, -
r55. /
.55/ 0
Create550 6
(556 7
productEntity557 D
)55D E
;55E F
res88 
=88 
new88 

ProductDTO88 (
{99 
	ProductID:: !
=::" #
createdProduct::$ 2
.::2 3
	ProductID::3 <
,::< =
ProductName;; #
=;;$ %
createdProduct;;& 4
.;;4 5
ProductName;;5 @
,;;@ A
	UnitPrice<< !
=<<" #
createdProduct<<$ 2
.<<2 3
	UnitPrice<<3 <
,<<< =
UnitsInStock== $
===% &
createdProduct==' 5
.==5 6
UnitsInStock==6 B
,==B C

CategoryID>> "
=>># $
createdProduct>>% 3
.>>3 4

CategoryID>>4 >
}?? 
;?? 
}@@ 
elseAA 
{BB 
throwDD 
newDD 
	ExceptionDD '
(DD' (
$strDD( P
)DDP Q
;DDQ R
}EE 
}FF 
returnGG 
resGG 
;GG 
}HH 	
publicLL 
ProductsLL 
RetrieveByIdLL $
(LL$ %
intLL% (
idLL) +
)LL+ ,
{MM 	
ProductsNN 
resNN 
=NN 
nullNN 
;NN  
usingOO 
(OO 
varOO 
rOO 
=OO 
RepositoryFactoryOO ,
.OO, -
CreateRepositoryOO- =
(OO= >
)OO> ?
)OO? @
{PP 
resQQ 
=QQ 
rQQ 
.QQ 
RetrieveQQ  
<QQ  !
ProductsQQ! )
>QQ) *
(QQ* +
pQQ+ ,
=>QQ- /
pQQ0 1
.QQ1 2
	ProductIDQQ2 ;
==QQ; =
idQQ> @
)QQ@ A
;QQA B
}SS 
returnTT 
resTT 
;TT 
}VV 	
publicXX 
boolXX 
UpdateXX 
(XX 
ProductsXX #
productToUpdateXX$ 3
)XX3 4
{YY 	
boolZZ 
resZZ 
=ZZ 
falseZZ 
;ZZ 
using[[ 
([[ 
var[[ 
r[[ 
=[[ 
RepositoryFactory[[ ,
.[[, -
CreateRepository[[- =
([[= >
)[[> ?
)[[? @
{\\ 
Products^^ 
temp^^ 
=^^ 
r^^  
.^^  !
Retrieve^^! )
<^^) *
Products^^* 2
>^^2 3
(^^3 4
p^^4 5
=>^^5 7
p^^7 8
.^^8 9
ProductName^^9 D
==^^D F
productToUpdate^^F U
.^^U V
ProductName^^V a
&&^^b d
p__ 
.__ 
	ProductID__ 
!=__ 
productToUpdate__ ,
.__, -
	ProductID__- 6
)__6 7
;__7 8
if`` 
(`` 
temp`` 
==`` 
null`` 
)``  
{aa 
resbb 
=bb 
rbb 
.bb 
Updatebb  
(bb  !
productToUpdatebb! 0
)bb0 1
;bb1 2
}cc 
elsedd 
{ee 
}gg 
}hh 
returnii 
resii 
;ii 
}kk 	
publicmm 
boolmm 
	UpdateDTOmm 
(mm 

ProductDTOmm (
productToUpdatemm) 8
)mm8 9
{nn 	
booloo 
resoo 
=oo 
falseoo 
;oo 
usingpp 
(pp 
varpp 
rpp 
=pp 
RepositoryFactorypp ,
.pp, -
CreateRepositorypp- =
(pp= >
)pp> ?
)pp? @
{qq 
varss 
productEntityss !
=ss" #
newss$ '
Productsss( 0
{tt 
	ProductIDuu 
=uu 
productToUpdateuu  /
.uu/ 0
	ProductIDuu0 9
,uu9 :
ProductNamevv 
=vv  !
productToUpdatevv" 1
.vv1 2
ProductNamevv2 =
,vv= >
	UnitPriceww 
=ww 
productToUpdateww  /
.ww/ 0
	UnitPriceww0 9
,ww9 :
UnitsInStockxx  
=xx! "
productToUpdatexx# 2
.xx2 3
UnitsInStockxx3 ?
,xx? @

CategoryIDyy 
=yy  
productToUpdateyy! 0
.yy0 1

CategoryIDyy1 ;
}zz 
;zz 
Products}} 
temp}} 
=}} 
r}}  !
.}}! "
Retrieve}}" *
<}}* +
Products}}+ 3
>}}3 4
(}}4 5
p}}5 6
=>}}7 9
p}}: ;
.}}; <
ProductName}}< G
==}}H J
productEntity}}K X
.}}X Y
ProductName}}Y d
&&}}e g
p~~: ;
.~~; <
	ProductID~~< E
!=~~F H
productEntity~~I V
.~~V W
	ProductID~~W `
)~~` a
;~~a b
if
АА 
(
АА 
temp
АА 
==
АА 
null
АА  
)
АА  !
{
ББ 
res
ГГ 
=
ГГ 
r
ГГ 
.
ГГ 
Update
ГГ "
(
ГГ" #
productEntity
ГГ# 0
)
ГГ0 1
;
ГГ1 2
}
ДД 
else
ЕЕ 
{
ЖЖ 
throw
ИИ 
new
ИИ 
	Exception
ИИ '
(
ИИ' (
$str
ИИ( V
)
ИИV W
;
ИИW X
}
ЙЙ 
}
КК 
return
ЛЛ 
res
ЛЛ 
;
ЛЛ 
}
ММ 	
public
ПП 
bool
ПП 
Delete
ПП 
(
ПП 
int
ПП 
id
ПП !
)
ПП! "
{
РР 	
bool
СС 
res
СС 
=
СС 
false
СС 
;
СС 
var
УУ 
product
УУ 
=
УУ 
RetrieveById
УУ $
(
УУ$ %
id
УУ% '
)
УУ' (
;
УУ( )
if
ФФ 
(
ФФ 
product
ФФ 
!=
ФФ 
null
ФФ 
)
ФФ  
{
ХХ 
if
ЦЦ 
(
ЦЦ 
product
ЦЦ 
.
ЦЦ 
UnitsInStock
ЦЦ (
!=
ЦЦ) +
$num
ЦЦ, -
)
ЦЦ- .
{
ЧЧ 
using
ШШ 
(
ШШ 
var
ШШ 
r
ШШ  
=
ШШ! "
RepositoryFactory
ШШ# 4
.
ШШ4 5
CreateRepository
ШШ5 E
(
ШШE F
)
ШШF G
)
ШШG H
{
ЩЩ 
res
ЫЫ 
=
ЫЫ 
r
ЫЫ 
.
ЫЫ  
Delete
ЫЫ  &
(
ЫЫ& '
product
ЫЫ' .
)
ЫЫ. /
;
ЫЫ/ 0
}
ЭЭ 
}
ЯЯ 
else
аа 
{
бб 
}
гг 
}
дд 
else
ее 
{
жж 
}
ии 
return
йй 
res
йй 
;
йй 
}
кк 	
public
мм 
List
мм 
<
мм 
Products
мм 
>
мм 
Filter
мм $
(
мм$ %
string
мм% +
name
мм, 0
)
мм0 1
{
нн 	
List
оо 
<
оо 
Products
оо 
>
оо 
res
оо 
=
оо  
null
оо! %
;
оо% &
using
пп 
(
пп 
var
пп 
r
пп 
=
пп 
RepositoryFactory
пп ,
.
пп, -
CreateRepository
пп- =
(
пп= >
)
пп> ?
)
пп? @
{
░░ 
res
▓▓ 
=
▓▓ 
r
▓▓ 
.
▓▓ 
Filter
▓▓ 
<
▓▓ 
Products
▓▓ '
>
▓▓' (
(
▓▓( )
p
▓▓) *
=>
▓▓* ,
p
▓▓, -
.
▓▓- .
ProductName
▓▓. 9
==
▓▓9 ;
name
▓▓; ?
)
▓▓? @
;
▓▓@ A
}
┤┤ 
return
╡╡ 
res
╡╡ 
;
╡╡ 
}
╢╢ 	
public
╕╕ 

ProductDTO
╕╕ 
GetProductById
╕╕ (
(
╕╕( )
int
╕╕) ,
id
╕╕- /
)
╕╕/ 0
{
╣╣ 	

ProductDTO
║║ 

productDTO
║║ !
=
║║" #
null
║║$ (
;
║║( )
using
╝╝ 
(
╝╝ 
var
╝╝ 
r
╝╝ 
=
╝╝ 
RepositoryFactory
╝╝ ,
.
╝╝, -
CreateRepository
╝╝- =
(
╝╝= >
)
╝╝> ?
)
╝╝? @
{
╜╜ 
var
┐┐ 
product
┐┐ 
=
┐┐ 
r
┐┐ 
.
┐┐  
Retrieve
┐┐  (
<
┐┐( )
Products
┐┐) 1
>
┐┐1 2
(
┐┐2 3
p
┐┐3 4
=>
┐┐5 7
p
┐┐8 9
.
┐┐9 :
	ProductID
┐┐: C
==
┐┐D F
id
┐┐G I
)
┐┐I J
;
┐┐J K
if
┴┴ 
(
┴┴ 
product
┴┴ 
!=
┴┴ 
null
┴┴ #
)
┴┴# $
{
┬┬ 

productDTO
── 
=
──  
new
──! $

ProductDTO
──% /
{
┼┼ 
	ProductID
╞╞ !
=
╞╞" #
product
╞╞$ +
.
╞╞+ ,
	ProductID
╞╞, 5
,
╞╞5 6
ProductName
╟╟ #
=
╟╟$ %
product
╟╟& -
.
╟╟- .
ProductName
╟╟. 9
,
╟╟9 :
	UnitPrice
╚╚ !
=
╚╚" #
product
╚╚$ +
.
╚╚+ ,
	UnitPrice
╚╚, 5
,
╚╚5 6
UnitsInStock
╔╔ $
=
╔╔% &
product
╔╔' .
.
╔╔. /
UnitsInStock
╔╔/ ;
,
╔╔; <

CategoryID
╩╩ "
=
╩╩# $
product
╩╩% ,
.
╩╩, -

CategoryID
╩╩- 7
,
╩╩7 8
}
╠╠ 
;
╠╠ 
}
══ 
}
╬╬ 
return
╨╨ 

productDTO
╨╨ 
;
╨╨ 
}
╤╤ 	
public
╙╙ 
List
╙╙ 
<
╙╙ 

ProductDTO
╙╙ 
>
╙╙ 
FilterProducts
╙╙  .
(
╙╙. /
string
╙╙/ 5
name
╙╙6 :
)
╙╙: ;
{
╘╘ 	
List
╒╒ 
<
╒╒ 

ProductDTO
╒╒ 
>
╒╒ 
res
╒╒  
=
╒╒! "
null
╒╒# '
;
╒╒' (
using
╫╫ 
(
╫╫ 
var
╫╫ 
r
╫╫ 
=
╫╫ 
RepositoryFactory
╫╫ ,
.
╫╫, -
CreateRepository
╫╫- =
(
╫╫= >
)
╫╫> ?
)
╫╫? @
{
╪╪ 
var
┌┌ 
products
┌┌ 
=
┌┌ 
r
┌┌  
.
┌┌  !
Filter
┌┌! '
<
┌┌' (
Products
┌┌( 0
>
┌┌0 1
(
┌┌1 2
p
┌┌2 3
=>
┌┌4 6
p
┌┌7 8
.
┌┌8 9
ProductName
┌┌9 D
.
┌┌D E
Equals
┌┌E K
(
┌┌K L
name
┌┌L P
)
┌┌P Q
)
┌┌Q R
;
┌┌R S
res
▌▌ 
=
▌▌ 
products
▌▌ 
.
▌▌ 
Select
▌▌ %
(
▌▌% &
p
▌▌& '
=>
▌▌( *
new
▌▌+ .

ProductDTO
▌▌/ 9
{
▐▐ 
	ProductID
▀▀ 
=
▀▀ 
p
▀▀  !
.
▀▀! "
	ProductID
▀▀" +
,
▀▀+ ,
ProductName
рр 
=
рр  !
p
рр" #
.
рр# $
ProductName
рр$ /
,
рр/ 0
	UnitPrice
сс 
=
сс 
p
сс  !
.
сс! "
	UnitPrice
сс" +
,
сс+ ,
UnitsInStock
тт  
=
тт! "
p
тт# $
.
тт$ %
UnitsInStock
тт% 1
,
тт1 2

CategoryID
уу 
=
уу  
p
уу! "
.
уу" #

CategoryID
уу# -
,
уу- .
}
хх 
)
хх 
.
хх 
ToList
хх 
(
хх 
)
хх 
;
хх 
}
цц 
return
шш 
res
шш 
;
шш 
}
щщ 	
public
ыы 
List
ыы 
<
ыы 

ProductDTO
ыы 
>
ыы +
FilterProductsDTOByCategoryID
ыы  =
(
ыы= >
int
ыы> A
ID
ыыB D
)
ыыD E
{
ьь 	
List
ээ 
<
ээ 

ProductDTO
ээ 
>
ээ 
res
ээ  
=
ээ! "
null
ээ# '
;
ээ' (
using
яя 
(
яя 
var
яя 
r
яя 
=
яя 
RepositoryFactory
яя ,
.
яя, -
CreateRepository
яя- =
(
яя= >
)
яя> ?
)
яя? @
{
ЁЁ 
var
ЄЄ 
products
ЄЄ 
=
ЄЄ 
r
ЄЄ  
.
ЄЄ  !
Filter
ЄЄ! '
<
ЄЄ' (
Products
ЄЄ( 0
>
ЄЄ0 1
(
ЄЄ1 2
p
ЄЄ2 3
=>
ЄЄ4 6
p
ЄЄ7 8
.
ЄЄ8 9

CategoryID
ЄЄ9 C
==
ЄЄD F
ID
ЄЄG I
)
ЄЄI J
;
ЄЄJ K
res
її 
=
її 
products
її 
.
її 
Select
її %
(
її% &
p
її& '
=>
її( *
new
її+ .

ProductDTO
її/ 9
{
ЎЎ 
	ProductID
ўў 
=
ўў 
p
ўў  !
.
ўў! "
	ProductID
ўў" +
,
ўў+ ,
ProductName
°° 
=
°°  !
p
°°" #
.
°°# $
ProductName
°°$ /
,
°°/ 0
	UnitPrice
∙∙ 
=
∙∙ 
p
∙∙  !
.
∙∙! "
	UnitPrice
∙∙" +
,
∙∙+ ,
UnitsInStock
··  
=
··! "
p
··# $
.
··$ %
UnitsInStock
··% 1
,
··1 2

CategoryID
√√ 
=
√√  
p
√√! "
.
√√" #

CategoryID
√√# -
}
¤¤ 
)
¤¤ 
.
¤¤ 
ToList
¤¤ 
(
¤¤ 
)
¤¤ 
;
¤¤ 
}
■■ 
return
АА 
res
АА 
;
АА 
}
ББ 	
}
ДД 
}ЕЕ Ц	
HD:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\ProductDTO.cs
	namespace 	
BLL
 
{ 
public

 

class

 

ProductDTO

 
{ 
public 
int 
	ProductID 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
ProductName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
decimal 
	UnitPrice  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
UnitsInStock 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 

CategoryID 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
CategoryName "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} ЫY
PD:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\LoginAttemptsLogic.cs
	namespace 	
BLL
 
{ 
public		 

class		 
LoginAttemptsLogic		 #
{

 
public 
bool  
RegisterLoginAttempt (
(( )
string) /
username0 8
)8 9
{ 	
bool 
	isBlocked 
= 
false "
;" #
using 
( 
var 

repository !
=" #
RepositoryFactory$ 5
.5 6
CreateRepository6 F
(F G
)G H
)H I
{ 
var 
loginAttempt  
=! "

repository# -
.- .
Retrieve. 6
<6 7
LoginAttempts7 D
>D E
(E F
lF G
=>H J
lK L
.L M
UsernameM U
==V X
usernameY a
)a b
;b c
if 
( 
loginAttempt  
==! #
null$ (
)( )
{ 
loginAttempt  
=! "
new# &
LoginAttempts' 4
{ 
Username  
=! "
username# +
,+ ,
AttemptCount $
=% &
$num' (
,( )
LastAttempt #
=$ %
DateTime& .
.. /
Now/ 2
,2 3
	IsBlocked !
=" #
false$ )
,) *

BlockUntil "
=# $
null% )
} 
; 

repository 
. 
Create %
(% &
loginAttempt& 2
)2 3
;3 4
}   
else!! 
{"" 
loginAttempt$$  
.$$  !
AttemptCount$$! -
++$$- /
;$$/ 0
loginAttempt%%  
.%%  !
LastAttempt%%! ,
=%%- .
DateTime%%/ 7
.%%7 8
Now%%8 ;
;%%; <
if(( 
((( 
loginAttempt(( $
.(($ %
AttemptCount((% 1
>=((2 4
$num((5 6
)((6 7
{)) 
loginAttempt** $
.**$ %
	IsBlocked**% .
=**/ 0
true**1 5
;**5 6
loginAttempt++ $
.++$ %

BlockUntil++% /
=++0 1
DateTime++2 :
.++: ;
Now++; >
.++> ?

AddMinutes++? I
(++I J
$num++J K
)++K L
;++L M
},, 

repository.. 
... 
Update.. %
(..% &
loginAttempt..& 2
)..2 3
;..3 4
}// 
	isBlocked11 
=11 
loginAttempt11 (
.11( )
	IsBlocked11) 2
;112 3
}22 
return33 
	isBlocked33 
;33 
}44 	
public77 
bool77 
IsAccountBlocked77 $
(77$ %
string77% +
username77, 4
)774 5
{88 	
using99 
(99 
var99 

repository99 !
=99" #
RepositoryFactory99$ 5
.995 6
CreateRepository996 F
(99F G
)99G H
)99H I
{:: 
var;; 
loginAttempt;;  
=;;! "

repository;;# -
.;;- .
Retrieve;;. 6
<;;6 7
LoginAttempts;;7 D
>;;D E
(;;E F
l;;F G
=>;;H J
l;;K L
.;;L M
Username;;M U
==;;V X
username;;Y a
);;a b
;;;b c
if== 
(== 
loginAttempt==  
!===! #
null==$ (
)==( )
{>> 
if@@ 
(@@ 
loginAttempt@@ $
.@@$ %
	IsBlocked@@% .
&&@@/ 1
loginAttempt@@2 >
.@@> ?

BlockUntil@@? I
.@@I J
HasValue@@J R
&&@@S U
loginAttempt@@V b
.@@b c

BlockUntil@@c m
<=@@n p
DateTime@@q y
.@@y z
Now@@z }
)@@} ~
{AA 
loginAttemptCC $
.CC$ %
	IsBlockedCC% .
=CC/ 0
falseCC1 6
;CC6 7
loginAttemptDD $
.DD$ %
AttemptCountDD% 1
=DD2 3
$numDD4 5
;DD5 6
loginAttemptEE $
.EE$ %

BlockUntilEE% /
=EE0 1
nullEE2 6
;EE6 7

repositoryFF "
.FF" #
UpdateFF# )
(FF) *
loginAttemptFF* 6
)FF6 7
;FF7 8
returnGG 
falseGG $
;GG$ %
}HH 
returnJJ 
loginAttemptJJ '
.JJ' (
	IsBlockedJJ( 1
;JJ1 2
}KK 
}LL 
returnMM 
falseMM 
;MM 
}NN 	
publicQQ 
boolQQ 
UnlockAccountQQ !
(QQ! "
stringQQ" (
usernameQQ) 1
)QQ1 2
{RR 	
usingSS 
(SS 
varSS 

repositorySS !
=SS" #
RepositoryFactorySS$ 5
.SS5 6
CreateRepositorySS6 F
(SSF G
)SSG H
)SSH I
{TT 
varUU 
loginAttemptUU  
=UU! "

repositoryUU# -
.UU- .
RetrieveUU. 6
<UU6 7
LoginAttemptsUU7 D
>UUD E
(UUE F
lUUF G
=>UUH J
lUUK L
.UUL M
UsernameUUM U
==UUV X
usernameUUY a
)UUa b
;UUb c
ifWW 
(WW 
loginAttemptWW  
!=WW! #
nullWW$ (
)WW( )
{XX 
loginAttemptYY  
.YY  !
	IsBlockedYY! *
=YY+ ,
falseYY- 2
;YY2 3
loginAttemptZZ  
.ZZ  !
AttemptCountZZ! -
=ZZ. /
$numZZ0 1
;ZZ1 2
loginAttempt[[  
.[[  !

BlockUntil[[! +
=[[, -
null[[. 2
;[[2 3
return]] 

repository]] %
.]]% &
Update]]& ,
(]], -
loginAttempt]]- 9
)]]9 :
;]]: ;
}^^ 
}__ 
return`` 
false`` 
;`` 
}aa 	
publicdd 
booldd 
ResetLoginAttemptsdd &
(dd& '
stringdd' -
usernamedd. 6
)dd6 7
{ee 	
usingff 
(ff 
varff 

repositoryff !
=ff" #
RepositoryFactoryff$ 5
.ff5 6
CreateRepositoryff6 F
(ffF G
)ffG H
)ffH I
{gg 
varhh 
loginAttempthh  
=hh! "

repositoryhh# -
.hh- .
Retrievehh. 6
<hh6 7
LoginAttemptshh7 D
>hhD E
(hhE F
lhhF G
=>hhH J
lhhK L
.hhL M
UsernamehhM U
==hhV X
usernamehhY a
)hha b
;hhb c
ifjj 
(jj 
loginAttemptjj  
!=jj! #
nulljj$ (
)jj( )
{kk 
loginAttemptll  
.ll  !
AttemptCountll! -
=ll. /
$numll0 1
;ll1 2
loginAttemptmm  
.mm  !
LastAttemptmm! ,
=mm- .
DateTimemm/ 7
.mm7 8
Nowmm8 ;
;mm; <
returnoo 

repositoryoo %
.oo% &
Updateoo& ,
(oo, -
loginAttemptoo- 9
)oo9 :
;oo: ;
}pp 
}qq 
returnrr 
falserr 
;rr 
}ss 	
publicvv 
Listvv 
<vv 
LoginAttemptsvv !
>vv! "
GetAllLoginAttemptsvv# 6
(vv6 7
)vv7 8
{ww 	
usingxx 
(xx 
varxx 

repositoryxx !
=xx" #
RepositoryFactoryxx$ 5
.xx5 6
CreateRepositoryxx6 F
(xxF G
)xxG H
)xxH I
{yy 
returnzz 

repositoryzz !
.zz! "
GetAllzz" (
<zz( )
LoginAttemptszz) 6
>zz6 7
(zz7 8
)zz8 9
;zz9 :
}{{ 
}|| 	
public 
LoginAttempts +
RetrieveLoginAttemptsByUsername <
(< =
string= C
usernameD L
)L M
{
АА 	
using
ББ 
(
ББ 
var
ББ 

repository
ББ !
=
ББ" #
RepositoryFactory
ББ$ 5
.
ББ5 6
CreateRepository
ББ6 F
(
ББF G
)
ББG H
)
ББH I
{
ВВ 
var
ДД 
loginAttempt
ДД  
=
ДД! "

repository
ДД# -
.
ДД- .
Retrieve
ДД. 6
<
ДД6 7
LoginAttempts
ДД7 D
>
ДДD E
(
ДДE F
l
ДДF G
=>
ДДH J
l
ДДK L
.
ДДL M
Username
ДДM U
==
ДДV X
username
ДДY a
)
ДДa b
;
ДДb c
return
ЕЕ 
loginAttempt
ЕЕ #
;
ЕЕ# $
}
ЖЖ 
}
ЗЗ 	
public
ЙЙ 
bool
ЙЙ 

UserExists
ЙЙ 
(
ЙЙ 
string
ЙЙ %
username
ЙЙ& .
)
ЙЙ. /
{
КК 	
using
ЛЛ 
(
ЛЛ 
var
ЛЛ 

repository
ЛЛ !
=
ЛЛ" #
RepositoryFactory
ЛЛ$ 5
.
ЛЛ5 6
CreateRepository
ЛЛ6 F
(
ЛЛF G
)
ЛЛG H
)
ЛЛH I
{
ММ 
var
НН 
loginAttempt
НН  
=
НН! "

repository
НН# -
.
НН- .
Retrieve
НН. 6
<
НН6 7
LoginAttempts
НН7 D
>
ННD E
(
ННE F
l
ННF G
=>
ННH J
l
ННK L
.
ННL M
Username
ННM U
==
ННV X
username
ННY a
)
ННa b
;
ННb c
return
ОО 
loginAttempt
ОО #
!=
ОО$ &
null
ОО' +
;
ОО+ ,
}
ПП 
}
РР 	
public
УУ 
void
УУ 
CreateUserRecord
УУ $
(
УУ$ %
string
УУ% +
username
УУ, 4
)
УУ4 5
{
ФФ 	
using
ХХ 
(
ХХ 
var
ХХ 

repository
ХХ !
=
ХХ" #
RepositoryFactory
ХХ$ 5
.
ХХ5 6
CreateRepository
ХХ6 F
(
ХХF G
)
ХХG H
)
ХХH I
{
ЦЦ 
var
ЧЧ 
loginAttempt
ЧЧ  
=
ЧЧ! "
new
ЧЧ# &
LoginAttempts
ЧЧ' 4
{
ШШ 
Username
ЩЩ 
=
ЩЩ 
username
ЩЩ '
,
ЩЩ' (
AttemptCount
ЪЪ  
=
ЪЪ! "
$num
ЪЪ# $
,
ЪЪ$ %
LastAttempt
ЫЫ 
=
ЫЫ  !
DateTime
ЫЫ" *
.
ЫЫ* +
Now
ЫЫ+ .
,
ЫЫ. /
	IsBlocked
ЬЬ 
=
ЬЬ 
false
ЬЬ  %
,
ЬЬ% &

BlockUntil
ЭЭ 
=
ЭЭ  
null
ЭЭ! %
}
ЮЮ 
;
ЮЮ 

repository
аа 
.
аа 
Create
аа !
(
аа! "
loginAttempt
аа" .
)
аа. /
;
аа/ 0
}
бб 
}
вв 	
}
ее 
}жж уЩ
KD:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\CategoryLogic.cs
	namespace

 	
BLL


 
{ 
public 

class 
CategoryLogic 
{ 
public 

Categories 
Create  
(  !

Categories! +
category, 4
)4 5
{ 	

Categories 
res 
= 
null !
;! "
using 
( 
var 
r 
= 
RepositoryFactory ,
., -
CreateRepository- =
(= >
)> ?
)? @
{ 

Categories 
existingCategory +
=, -
r. /
./ 0
Retrieve0 8
<8 9

Categories9 C
>C D
(D E
cE F
=>G I
cJ K
.K L
CategoryNameL X
==Y [
category\ d
.d e
CategoryNamee q
)q r
;r s
if 
( 
existingCategory $
==% '
null( ,
), -
{ 
res 
= 
r 
. 
Create "
(" #
category# +
)+ ,
;, -
} 
else 
{ 
throw 
new 
	Exception '
(' (
$str( A
)A B
;B C
} 
} 
return   
res   
;   
}!! 	
public$$ 

Categories$$ 
RetrieveById$$ &
($$& '
int$$' *
id$$+ -
)$$- .
{%% 	

Categories&& 
res&& 
=&& 
null&& !
;&&! "
using'' 
('' 
var'' 
r'' 
='' 
RepositoryFactory'' ,
.'', -
CreateRepository''- =
(''= >
)''> ?
)''? @
{(( 
res)) 
=)) 
r)) 
.)) 
Retrieve))  
<))  !

Categories))! +
>))+ ,
()), -
c))- .
=>))/ 1
c))2 3
.))3 4

CategoryID))4 >
==))? A
id))B D
)))D E
;))E F
}++ 
return,, 
res,, 
;,, 
}-- 	
public// 
CategoryDTO// 
GetCategoryById// *
(//* +
int//+ .
id/// 1
)//1 2
{00 	
CategoryDTO11 
categoryDTO11 #
=11$ %
null11& *
;11* +
using33 
(33 
var33 
r33 
=33 
RepositoryFactory33 ,
.33, -
CreateRepository33- =
(33= >
)33> ?
)33? @
{44 
var66 
category66 
=66 
r66  
.66  !
Retrieve66! )
<66) *

Categories66* 4
>664 5
(665 6
c666 7
=>668 :
c66; <
.66< =

CategoryID66= G
==66H J
id66K M
)66M N
;66N O
if99 
(99 
category99 
!=99 
null99  $
)99$ %
{:: 
categoryDTO<< 
=<<  !
new<<" %
CategoryDTO<<& 1
{== 

CategoryID>> "
=>># $
category>>% -
.>>- .

CategoryID>>. 8
,>>8 9
CategoryName?? $
=??% &
category??' /
.??/ 0
CategoryName??0 <
,??< =
Description@@ #
=@@$ %
category@@& .
.@@. /
Description@@/ :
,@@: ;
ProductsAA  
=AA! "
categoryAA# +
.AA+ ,
ProductsAA, 4
.AA4 5
SelectAA5 ;
(AA; <
pAA< =
=>AA> @
newAAA D

ProductDTOAAE O
{BB 
	ProductIDCC %
=CC& '
pCC( )
.CC) *
	ProductIDCC* 3
,CC3 4
ProductNameDD '
=DD( )
pDD* +
.DD+ ,
ProductNameDD, 7
,DD7 8
	UnitPriceEE %
=EE& '
pEE( )
.EE) *
	UnitPriceEE* 3
,EE3 4
UnitsInStockFF (
=FF) *
pFF+ ,
.FF, -
UnitsInStockFF- 9
,FF9 :

CategoryIDGG &
=GG' (
pGG) *
.GG* +

CategoryIDGG+ 5
,GG5 6
}II 
)II 
.II 
ToListII !
(II! "
)II" #
}JJ 
;JJ 
}KK 
}LL 
returnNN 
categoryDTONN 
;NN 
}OO 	
publicRR 
ListRR 
<RR 
CategoryDTORR 
>RR  
Filter1RR! (
(RR( )
stringRR) /
nameRR0 4
)RR4 5
{SS 	
ListTT 
<TT 
CategoryDTOTT 
>TT 
resTT !
=TT" #
nullTT$ (
;TT( )
usingVV 
(VV 
varVV 
rVV 
=VV 
RepositoryFactoryVV ,
.VV, -
CreateRepositoryVV- =
(VV= >
)VV> ?
)VV? @
{WW 
varYY 

categoriesYY 
=YY  
rYY! "
.YY" #
FilterYY# )
<YY) *

CategoriesYY* 4
>YY4 5
(YY5 6
cYY6 7
=>YY8 :
cYY; <
.YY< =
CategoryNameYY= I
.YYI J
ContainsYYJ R
(YYR S
nameYYS W
)YYW X
)YYX Y
;YYY Z
res\\ 
=\\ 

categories\\  
.\\  !
Select\\! '
(\\' (
c\\( )
=>\\* ,
new\\- 0
CategoryDTO\\1 <
{]] 

CategoryID^^ 
=^^  
c^^! "
.^^" #

CategoryID^^# -
,^^- .
CategoryName__  
=__! "
c__# $
.__$ %
CategoryName__% 1
,__1 2
Description`` 
=``  !
c``" #
.``# $
Description``$ /
,``/ 0
Productsaa 
=aa 
caa 
.aa 
Productsaa '
.aa' (
Selectaa( .
(aa. /
paa/ 0
=>aa1 3
newaa4 7

ProductDTOaa8 B
{bb 
	ProductIDcc !
=cc" #
pcc$ %
.cc% &
	ProductIDcc& /
,cc/ 0
ProductNamedd #
=dd$ %
pdd& '
.dd' (
ProductNamedd( 3
,dd3 4
	UnitPriceee !
=ee" #
pee$ %
.ee% &
	UnitPriceee& /
,ee/ 0
UnitsInStockff $
=ff% &
pff' (
.ff( )
UnitsInStockff) 5
,ff5 6

CategoryIDgg "
=gg# $
pgg% &
.gg& '

CategoryIDgg' 1
}ii 
)ii 
.ii 
ToListii 
(ii 
)ii 
}jj 
)jj 
.jj 
ToListjj 
(jj 
)jj 
;jj 
}kk 
returnmm 
resmm 
;mm 
}nn 	
publicss 
intss 
Updatess 
(ss 

Categoriesss $
categoryToUpdatess% 5
)ss5 6
{tt 	
booluu 
resuu 
=uu 
falseuu 
;uu 
usingvv 
(vv 
varvv 
rvv 
=vv 
RepositoryFactoryvv ,
.vv, -
CreateRepositoryvv- =
(vv= >
)vv> ?
)vv? @
{ww 

Categoriesyy 
existingCategoryyy +
=yy, -
ryy. /
.yy/ 0
Retrieveyy0 8
<yy8 9

Categoriesyy9 C
>yyC D
(yyD E
czz 
=>zz 
czz 
.zz 
CategoryNamezz '
==zz( *
categoryToUpdatezz+ ;
.zz; <
CategoryNamezz< H
&&zzI K
c{{ 
.{{ 

CategoryID{{ %
!={{& (
categoryToUpdate{{) 9
.{{9 :

CategoryID{{: D
){{D E
;{{E F
if|| 
(|| 
existingCategory|| $
==||% '
null||( ,
)||, -
{}} 
res~~ 
=~~ 
r~~ 
.~~ 
Update~~ "
(~~" #
categoryToUpdate~~# 3
)~~3 4
;~~4 5
} 
else
АА 
{
ББ 
throw
ГГ 
new
ГГ 
	Exception
ГГ '
(
ГГ' (
$str
ГГ( W
)
ГГW X
;
ГГX Y
}
ДД 
}
ЕЕ 
return
ЖЖ 
$num
ЖЖ 
;
ЖЖ 
}
ЗЗ 	
public
ЙЙ 
bool
ЙЙ 
	UpdateDTO
ЙЙ 
(
ЙЙ 
CategoryDTO
ЙЙ )
categoryToUpdate
ЙЙ* :
)
ЙЙ: ;
{
КК 	
using
ЛЛ 
(
ЛЛ 
var
ЛЛ 
r
ЛЛ 
=
ЛЛ 
RepositoryFactory
ЛЛ ,
.
ЛЛ, -
CreateRepository
ЛЛ- =
(
ЛЛ= >
)
ЛЛ> ?
)
ЛЛ? @
{
ММ 
var
ОО 
categoryEntity
ОО "
=
ОО# $
new
ОО% (

Categories
ОО) 3
{
ПП 

CategoryID
РР 
=
РР  
categoryToUpdate
РР! 1
.
РР1 2

CategoryID
РР2 <
,
РР< =
CategoryName
СС  
=
СС! "
categoryToUpdate
СС# 3
.
СС3 4
CategoryName
СС4 @
,
СС@ A
Description
ТТ 
=
ТТ  !
categoryToUpdate
ТТ" 2
.
ТТ2 3
Description
ТТ3 >
}
УУ 
;
УУ 

Categories
ЦЦ 
existingCategory
ЦЦ +
=
ЦЦ, -
r
ЦЦ. /
.
ЦЦ/ 0
Retrieve
ЦЦ0 8
<
ЦЦ8 9

Categories
ЦЦ9 C
>
ЦЦC D
(
ЦЦD E
c
ЧЧ 
=>
ЧЧ 
c
ЧЧ 
.
ЧЧ 
CategoryName
ЧЧ '
==
ЧЧ( *
categoryEntity
ЧЧ+ 9
.
ЧЧ9 :
CategoryName
ЧЧ: F
&&
ЧЧG I
c
ШШ 
.
ШШ 

CategoryID
ШШ %
!=
ШШ& (
categoryEntity
ШШ) 7
.
ШШ7 8

CategoryID
ШШ8 B
)
ШШB C
;
ШШC D
if
ЪЪ 
(
ЪЪ 
existingCategory
ЪЪ $
==
ЪЪ% '
null
ЪЪ( ,
)
ЪЪ, -
{
ЫЫ 
bool
ЭЭ 
result
ЭЭ 
=
ЭЭ  !
r
ЭЭ" #
.
ЭЭ# $
Update
ЭЭ$ *
(
ЭЭ* +
categoryEntity
ЭЭ+ 9
)
ЭЭ9 :
;
ЭЭ: ;
return
аа 
result
аа !
;
аа! "
}
бб 
else
вв 
{
гг 
throw
ее 
new
ее 
	Exception
ее '
(
ее' (
$str
ее( W
)
ееW X
;
ееX Y
}
жж 
}
зз 
}
ии 	
public
мм 
bool
мм 
Delete
мм 
(
мм 
int
мм 
id
мм !
)
мм! "
{
нн 	
bool
оо 
res
оо 
=
оо 
false
оо 
;
оо 
using
░░ 
(
░░ 
var
░░ 
r
░░ 
=
░░ 
RepositoryFactory
░░ ,
.
░░, -
CreateRepository
░░- =
(
░░= >
)
░░> ?
)
░░? @
{
▒▒ 
var
▓▓ 
products
▓▓ 
=
▓▓ 
r
▓▓  
.
▓▓  !
Filter
▓▓! '
<
▓▓' (
Products
▓▓( 0
>
▓▓0 1
(
▓▓1 2
p
▓▓2 3
=>
▓▓4 6
p
▓▓7 8
.
▓▓8 9

CategoryID
▓▓9 C
==
▓▓D F
id
▓▓G I
)
▓▓I J
;
▓▓J K
if
││ 
(
││ 
products
││ 
==
││ 
null
││  $
||
││% '
products
││( 0
.
││0 1
Count
││1 6
==
││7 9
$num
││: ;
)
││; <
{
┤┤ 
var
╡╡ 
category
╡╡  
=
╡╡! "
RetrieveById
╡╡# /
(
╡╡/ 0
id
╡╡0 2
)
╡╡2 3
;
╡╡3 4
if
╢╢ 
(
╢╢ 
category
╢╢  
!=
╢╢! #
null
╢╢$ (
)
╢╢( )
{
╖╖ 
res
╕╕ 
=
╕╕ 
r
╕╕ 
.
╕╕  
Delete
╕╕  &
(
╕╕& '
category
╕╕' /
)
╕╕/ 0
;
╕╕0 1
}
╣╣ 
else
║║ 
{
╗╗ 
throw
╝╝ 
new
╝╝ !
	Exception
╝╝" +
(
╝╝+ ,
$str
╝╝, E
)
╝╝E F
;
╝╝F G
}
╜╜ 
}
╛╛ 
else
┐┐ 
{
└└ 
throw
┬┬ 
new
┬┬ 
	Exception
┬┬ '
(
┬┬' (
$str
┬┬( m
)
┬┬m n
;
┬┬n o
}
├├ 
}
── 
return
┼┼ 
res
┼┼ 
;
┼┼ 
}
╞╞ 	
public
╔╔ 
List
╔╔ 
<
╔╔ 

Categories
╔╔ 
>
╔╔ 
Filter
╔╔  &
(
╔╔& '
string
╔╔' -
name
╔╔. 2
)
╔╔2 3
{
╩╩ 	
List
╦╦ 
<
╦╦ 

Categories
╦╦ 
>
╦╦ 
res
╦╦  
=
╦╦! "
null
╦╦# '
;
╦╦' (
using
╠╠ 
(
╠╠ 
var
╠╠ 
r
╠╠ 
=
╠╠ 
RepositoryFactory
╠╠ ,
.
╠╠, -
CreateRepository
╠╠- =
(
╠╠= >
)
╠╠> ?
)
╠╠? @
{
══ 
res
╬╬ 
=
╬╬ 
r
╬╬ 
.
╬╬ 
Filter
╬╬ 
<
╬╬ 

Categories
╬╬ )
>
╬╬) *
(
╬╬* +
c
╬╬+ ,
=>
╬╬- /
c
╬╬0 1
.
╬╬1 2
CategoryName
╬╬2 >
.
╬╬> ?
Contains
╬╬? G
(
╬╬G H
name
╬╬H L
)
╬╬L M
)
╬╬M N
;
╬╬N O
}
╧╧ 
return
╨╨ 
res
╨╨ 
;
╨╨ 
}
╤╤ 	
public
╥╥ 
CategoryDTO
╥╥ 
	CreateDTO
╥╥ $
(
╥╥$ %
CategoryDTO
╥╥% 0
categoryDTO
╥╥1 <
)
╥╥< =
{
╙╙ 	
CategoryDTO
╘╘ 
res
╘╘ 
=
╘╘ 
null
╘╘ "
;
╘╘" #
using
╓╓ 
(
╓╓ 
var
╓╓ 
r
╓╓ 
=
╓╓ 
RepositoryFactory
╓╓ ,
.
╓╓, -
CreateRepository
╓╓- =
(
╓╓= >
)
╓╓> ?
)
╓╓? @
{
╫╫ 
var
┘┘ 
categoryEntity
┘┘ "
=
┘┘# $
new
┘┘% (

Categories
┘┘) 3
{
┌┌ 
CategoryName
██  
=
██! "
categoryDTO
██# .
.
██. /
CategoryName
██/ ;
,
██; <
Description
▄▄ 
=
▄▄  !
categoryDTO
▄▄" -
.
▄▄- .
Description
▄▄. 9
}
▌▌ 
;
▌▌ 

Categories
рр 
existingCategory
рр +
=
рр, -
r
рр. /
.
рр/ 0
Retrieve
рр0 8
<
рр8 9

Categories
рр9 C
>
ррC D
(
ррD E
c
ррE F
=>
ррG I
c
ррJ K
.
ррK L
CategoryName
ррL X
==
ррY [
categoryEntity
рр\ j
.
ррj k
CategoryName
ррk w
)
ррw x
;
ррx y
if
сс 
(
сс 
existingCategory
сс $
==
сс% '
null
сс( ,
)
сс, -
{
тт 

Categories
фф 
createdCategory
фф .
=
фф/ 0
r
фф1 2
.
фф2 3
Create
фф3 9
(
фф9 :
categoryEntity
фф: H
)
ффH I
;
ффI J
res
чч 
=
чч 
new
чч 
CategoryDTO
чч )
{
шш 

CategoryID
щщ "
=
щщ# $
createdCategory
щщ% 4
.
щщ4 5

CategoryID
щщ5 ?
,
щщ? @
CategoryName
ъъ $
=
ъъ% &
createdCategory
ъъ' 6
.
ъъ6 7
CategoryName
ъъ7 C
,
ъъC D
Description
ыы #
=
ыы$ %
createdCategory
ыы& 5
.
ыы5 6
Description
ыы6 A
,
ыыA B
Products
ьь  
=
ьь! "
new
ьь# &
List
ьь' +
<
ьь+ ,

ProductDTO
ьь, 6
>
ьь6 7
(
ьь7 8
)
ьь8 9
}
ээ 
;
ээ 
}
юю 
else
яя 
{
ЁЁ 
throw
ЄЄ 
new
ЄЄ 
	Exception
ЄЄ '
(
ЄЄ' (
$str
ЄЄ( A
)
ЄЄA B
;
ЄЄB C
}
єє 
}
ЇЇ 
return
ЎЎ 
res
ЎЎ 
;
ЎЎ 
}
ўў 	
public
√√ 
List
√√ 
<
√√ 
CategoryDTO
√√ 
>
√√  
	GetAllDTO
√√! *
(
√√* +
)
√√+ ,
{
№№ 	
List
¤¤ 
<
¤¤ 
CategoryDTO
¤¤ 
>
¤¤ 
categoryDTOs
¤¤ *
=
¤¤+ ,
new
¤¤- 0
List
¤¤1 5
<
¤¤5 6
CategoryDTO
¤¤6 A
>
¤¤A B
(
¤¤B C
)
¤¤C D
;
¤¤D E
using
   
(
   
var
   
r
   
=
   
RepositoryFactory
   ,
.
  , -
CreateRepository
  - =
(
  = >
)
  > ?
)
  ? @
{
АА 
var
ВВ 

categories
ВВ 
=
ВВ  
r
ВВ! "
.
ВВ" #
GetAll
ВВ# )
<
ВВ) *

Categories
ВВ* 4
>
ВВ4 5
(
ВВ5 6
)
ВВ6 7
;
ВВ7 8
categoryDTOs
ЕЕ 
=
ЕЕ 

categories
ЕЕ )
.
ЕЕ) *
Select
ЕЕ* 0
(
ЕЕ0 1
c
ЕЕ1 2
=>
ЕЕ3 5
new
ЕЕ6 9
CategoryDTO
ЕЕ: E
{
ЖЖ 

CategoryID
ЗЗ 
=
ЗЗ  
c
ЗЗ! "
.
ЗЗ" #

CategoryID
ЗЗ# -
,
ЗЗ- .
CategoryName
ИИ  
=
ИИ! "
c
ИИ# $
.
ИИ$ %
CategoryName
ИИ% 1
,
ИИ1 2
Description
ЙЙ 
=
ЙЙ  !
c
ЙЙ" #
.
ЙЙ# $
Description
ЙЙ$ /
,
ЙЙ/ 0
Products
КК 
=
КК 
c
КК  
.
КК  !
Products
КК! )
.
КК) *
Select
КК* 0
(
КК0 1
p
КК1 2
=>
КК3 5
new
КК6 9

ProductDTO
КК: D
{
ЛЛ 
	ProductID
ММ !
=
ММ" #
p
ММ$ %
.
ММ% &
	ProductID
ММ& /
,
ММ/ 0
ProductName
НН #
=
НН$ %
p
НН& '
.
НН' (
ProductName
НН( 3
,
НН3 4
	UnitPrice
ОО !
=
ОО" #
p
ОО$ %
.
ОО% &
	UnitPrice
ОО& /
,
ОО/ 0
UnitsInStock
ПП $
=
ПП% &
p
ПП' (
.
ПП( )
UnitsInStock
ПП) 5
,
ПП5 6

CategoryID
РР "
=
РР# $
p
РР% &
.
РР& '

CategoryID
РР' 1
}
СС 
)
СС 
.
СС 
ToList
СС 
(
СС 
)
СС 
}
ТТ 
)
ТТ 
.
ТТ 
ToList
ТТ 
(
ТТ 
)
ТТ 
;
ТТ 
}
УУ 
return
ХХ 
categoryDTOs
ХХ 
;
ХХ  
}
ЦЦ 	
}
ЫЫ 
}ЬЬ У
ID:\ESCRITORIO\septimo\distribuidas\proyecto\Sales_2026\BLL\CategoryDTO.cs
	namespace 	
BLL
 
{ 
public

 

class

 
CategoryDTO

 
{ 
public 
int 

CategoryID 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
CategoryName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
List 
< 

ProductDTO 
> 
Products  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} 