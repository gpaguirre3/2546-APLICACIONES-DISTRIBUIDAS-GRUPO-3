//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ClienteSoapRest.Categoryproduct {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProductoSoap", Namespace="http://tempuri.org/")]
    public partial class Producto : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterProductsDTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProductDTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductDTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterCategoryDTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCategoryDTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryDTOOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Producto() {
            this.Url = global::ClienteSoapRest.Properties.Settings.Default.ClienteSoapRest_Categoryproduct_Producto;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetProductByIdCompletedEventHandler GetProductByIdCompleted;
        
        /// <remarks/>
        public event DeleteProductCompletedEventHandler DeleteProductCompleted;
        
        /// <remarks/>
        public event FilterProductsDTOCompletedEventHandler FilterProductsDTOCompleted;
        
        /// <remarks/>
        public event CreateProductDTOCompletedEventHandler CreateProductDTOCompleted;
        
        /// <remarks/>
        public event UpdateProductDTOCompletedEventHandler UpdateProductDTOCompleted;
        
        /// <remarks/>
        public event GetCategoryByIdCompletedEventHandler GetCategoryByIdCompleted;
        
        /// <remarks/>
        public event DeleteCategoryCompletedEventHandler DeleteCategoryCompleted;
        
        /// <remarks/>
        public event FilterCategoryDTOCompletedEventHandler FilterCategoryDTOCompleted;
        
        /// <remarks/>
        public event CreateCategoryDTOCompletedEventHandler CreateCategoryDTOCompleted;
        
        /// <remarks/>
        public event UpdateCategoryDTOCompletedEventHandler UpdateCategoryDTOCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDTO GetProductById(int id) {
            object[] results = this.Invoke("GetProductById", new object[] {
                        id});
            return ((ProductDTO)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByIdAsync(int id) {
            this.GetProductByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetProductByIdAsync(int id, object userState) {
            if ((this.GetProductByIdOperationCompleted == null)) {
                this.GetProductByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByIdOperationCompleted);
            }
            this.InvokeAsync("GetProductById", new object[] {
                        id}, this.GetProductByIdOperationCompleted, userState);
        }
        
        private void OnGetProductByIdOperationCompleted(object arg) {
            if ((this.GetProductByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByIdCompleted(this, new GetProductByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteProduct(int id) {
            object[] results = this.Invoke("DeleteProduct", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProductAsync(int id) {
            this.DeleteProductAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteProductAsync(int id, object userState) {
            if ((this.DeleteProductOperationCompleted == null)) {
                this.DeleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductOperationCompleted);
            }
            this.InvokeAsync("DeleteProduct", new object[] {
                        id}, this.DeleteProductOperationCompleted, userState);
        }
        
        private void OnDeleteProductOperationCompleted(object arg) {
            if ((this.DeleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductCompleted(this, new DeleteProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilterProductsDTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDTO[] FilterProductsDTO(string name) {
            object[] results = this.Invoke("FilterProductsDTO", new object[] {
                        name});
            return ((ProductDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterProductsDTOAsync(string name) {
            this.FilterProductsDTOAsync(name, null);
        }
        
        /// <remarks/>
        public void FilterProductsDTOAsync(string name, object userState) {
            if ((this.FilterProductsDTOOperationCompleted == null)) {
                this.FilterProductsDTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterProductsDTOOperationCompleted);
            }
            this.InvokeAsync("FilterProductsDTO", new object[] {
                        name}, this.FilterProductsDTOOperationCompleted, userState);
        }
        
        private void OnFilterProductsDTOOperationCompleted(object arg) {
            if ((this.FilterProductsDTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterProductsDTOCompleted(this, new FilterProductsDTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateProductDTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDTO CreateProductDTO(ProductDTO product) {
            object[] results = this.Invoke("CreateProductDTO", new object[] {
                        product});
            return ((ProductDTO)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProductDTOAsync(ProductDTO product) {
            this.CreateProductDTOAsync(product, null);
        }
        
        /// <remarks/>
        public void CreateProductDTOAsync(ProductDTO product, object userState) {
            if ((this.CreateProductDTOOperationCompleted == null)) {
                this.CreateProductDTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProductDTOOperationCompleted);
            }
            this.InvokeAsync("CreateProductDTO", new object[] {
                        product}, this.CreateProductDTOOperationCompleted, userState);
        }
        
        private void OnCreateProductDTOOperationCompleted(object arg) {
            if ((this.CreateProductDTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProductDTOCompleted(this, new CreateProductDTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProductDTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProductDTO(ProductDTO product) {
            object[] results = this.Invoke("UpdateProductDTO", new object[] {
                        product});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductDTOAsync(ProductDTO product) {
            this.UpdateProductDTOAsync(product, null);
        }
        
        /// <remarks/>
        public void UpdateProductDTOAsync(ProductDTO product, object userState) {
            if ((this.UpdateProductDTOOperationCompleted == null)) {
                this.UpdateProductDTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductDTOOperationCompleted);
            }
            this.InvokeAsync("UpdateProductDTO", new object[] {
                        product}, this.UpdateProductDTOOperationCompleted, userState);
        }
        
        private void OnUpdateProductDTOOperationCompleted(object arg) {
            if ((this.UpdateProductDTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductDTOCompleted(this, new UpdateProductDTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategoryById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CategoryDTO GetCategoryById(int id) {
            object[] results = this.Invoke("GetCategoryById", new object[] {
                        id});
            return ((CategoryDTO)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryByIdAsync(int id) {
            this.GetCategoryByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCategoryByIdAsync(int id, object userState) {
            if ((this.GetCategoryByIdOperationCompleted == null)) {
                this.GetCategoryByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryByIdOperationCompleted);
            }
            this.InvokeAsync("GetCategoryById", new object[] {
                        id}, this.GetCategoryByIdOperationCompleted, userState);
        }
        
        private void OnGetCategoryByIdOperationCompleted(object arg) {
            if ((this.GetCategoryByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryByIdCompleted(this, new GetCategoryByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteCategory(int id) {
            object[] results = this.Invoke("DeleteCategory", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int id) {
            this.DeleteCategoryAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteCategoryAsync(int id, object userState) {
            if ((this.DeleteCategoryOperationCompleted == null)) {
                this.DeleteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCategoryOperationCompleted);
            }
            this.InvokeAsync("DeleteCategory", new object[] {
                        id}, this.DeleteCategoryOperationCompleted, userState);
        }
        
        private void OnDeleteCategoryOperationCompleted(object arg) {
            if ((this.DeleteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCategoryCompleted(this, new DeleteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilterCategoryDTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CategoryDTO[] FilterCategoryDTO(string name) {
            object[] results = this.Invoke("FilterCategoryDTO", new object[] {
                        name});
            return ((CategoryDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterCategoryDTOAsync(string name) {
            this.FilterCategoryDTOAsync(name, null);
        }
        
        /// <remarks/>
        public void FilterCategoryDTOAsync(string name, object userState) {
            if ((this.FilterCategoryDTOOperationCompleted == null)) {
                this.FilterCategoryDTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterCategoryDTOOperationCompleted);
            }
            this.InvokeAsync("FilterCategoryDTO", new object[] {
                        name}, this.FilterCategoryDTOOperationCompleted, userState);
        }
        
        private void OnFilterCategoryDTOOperationCompleted(object arg) {
            if ((this.FilterCategoryDTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterCategoryDTOCompleted(this, new FilterCategoryDTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateCategoryDTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CategoryDTO CreateCategoryDTO(CategoryDTO category) {
            object[] results = this.Invoke("CreateCategoryDTO", new object[] {
                        category});
            return ((CategoryDTO)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCategoryDTOAsync(CategoryDTO category) {
            this.CreateCategoryDTOAsync(category, null);
        }
        
        /// <remarks/>
        public void CreateCategoryDTOAsync(CategoryDTO category, object userState) {
            if ((this.CreateCategoryDTOOperationCompleted == null)) {
                this.CreateCategoryDTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCategoryDTOOperationCompleted);
            }
            this.InvokeAsync("CreateCategoryDTO", new object[] {
                        category}, this.CreateCategoryDTOOperationCompleted, userState);
        }
        
        private void OnCreateCategoryDTOOperationCompleted(object arg) {
            if ((this.CreateCategoryDTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCategoryDTOCompleted(this, new CreateCategoryDTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCategoryDTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCategoryDTO(CategoryDTO category) {
            object[] results = this.Invoke("UpdateCategoryDTO", new object[] {
                        category});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCategoryDTOAsync(CategoryDTO category) {
            this.UpdateCategoryDTOAsync(category, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryDTOAsync(CategoryDTO category, object userState) {
            if ((this.UpdateCategoryDTOOperationCompleted == null)) {
                this.UpdateCategoryDTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryDTOOperationCompleted);
            }
            this.InvokeAsync("UpdateCategoryDTO", new object[] {
                        category}, this.UpdateCategoryDTOOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryDTOOperationCompleted(object arg) {
            if ((this.UpdateCategoryDTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryDTOCompleted(this, new UpdateCategoryDTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductDTO {
        
        private int productIDField;
        
        private string productNameField;
        
        private decimal unitPriceField;
        
        private int unitsInStockField;
        
        private int categoryIDField;
        
        private string categoryNameField;
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public int UnitsInStock {
            get {
                return this.unitsInStockField;
            }
            set {
                this.unitsInStockField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CategoryDTO {
        
        private int categoryIDField;
        
        private string categoryNameField;
        
        private string descriptionField;
        
        private ProductDTO[] productsField;
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public ProductDTO[] Products {
            get {
                return this.productsField;
            }
            set {
                this.productsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProductByIdCompletedEventHandler(object sender, GetProductByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DeleteProductCompletedEventHandler(object sender, DeleteProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FilterProductsDTOCompletedEventHandler(object sender, FilterProductsDTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterProductsDTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterProductsDTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreateProductDTOCompletedEventHandler(object sender, CreateProductDTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProductDTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProductDTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateProductDTOCompletedEventHandler(object sender, UpdateProductDTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductDTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductDTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCategoryByIdCompletedEventHandler(object sender, GetCategoryByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DeleteCategoryCompletedEventHandler(object sender, DeleteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FilterCategoryDTOCompletedEventHandler(object sender, FilterCategoryDTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterCategoryDTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterCategoryDTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreateCategoryDTOCompletedEventHandler(object sender, CreateCategoryDTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCategoryDTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCategoryDTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateCategoryDTOCompletedEventHandler(object sender, UpdateCategoryDTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCategoryDTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCategoryDTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591